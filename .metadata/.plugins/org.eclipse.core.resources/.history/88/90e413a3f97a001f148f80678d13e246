package com.ssafy.ws.step2.servlet;

import java.io.IOException;

import com.ssafy.ws.step2.dto.Movie;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.RequestDispatcher;

@WebServlet("/main")
public class MainServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    public MainServlet() {
        super();
    }
    
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        process(request, response);
    }
    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("utf-8");
        process(request, response);
    }
    
    private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String act = request.getParameter("act");
        System.out.println("act =====> " + act);
        
        String path = "";
        if ("mvregist".equals(act)) {
            path = mvregist(request, response);
            redirect(request, response, path);
		} else if ("regist".equals(act)) {
			path = regist(request, response);
			forward(request, response, path);
		} else if ("list".equals(act)) {
			path = list(request, response);
			redirect(request, response, path);
		} else {
			// 기본적으로 글 목록으로 이동
			path = "/";
			redirect(request, response, path);
		}
    }

    private String regist(HttpServletRequest request, HttpServletResponse response) {
    	
    	Movie movie = new Movie();
    	
    	request.setAttribute("title", request.getParameter("title"));
    	request.setAttribute("director", request.getParameter("director"));
    	request.setAttribute("genre", request.getParameter("genre"));
    	request.setAttribute("running-time", request.getParameter("running-time"));
    	return "/regist_result.jsp";
	}

	private String list(HttpServletRequest request, HttpServletResponse response) {
    	return "/list.jsp";
	}
    
    private String mvregist(HttpServletRequest request, HttpServletResponse response) {
        return "/regist.jsp";
    }
    
    private void forward(HttpServletRequest request, HttpServletResponse response, String path) throws ServletException, IOException {
		RequestDispatcher dispatcher = request.getRequestDispatcher(path);
		dispatcher.forward(request, response);
	}

	private void redirect(HttpServletRequest request, HttpServletResponse response, String path) throws IOException {
		response.sendRedirect(request.getContextPath() + path);
	}
}
